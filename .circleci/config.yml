# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs: 
  discord: antonioned/discord@0.1.0
  
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "Config fiel running"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      
description: Send a notification that a manual approval job is ready
parameters:
  channel:
    default: ''
    description: |
      ID of channel if set, overrides webhook's default channel setting
    type: string
  color:
    default: '3843043'
    description: Decimal color value for notification attachment color.
    type: string
  mentions:
    default: ''
    description: A comma separated list of user IDs. No spaces.
    type: string
  message:
    default: A workflow in CircleCI is awaiting your approval.
    description: Enter custom message.
    type: string
  url:
    default: 'https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}'
    description: The URL to link back to.
    type: string
  webhook:
    default: '${DISCORD_WEBHOOK_URL}'
    description: >-
      Enter either your Webhook value or use the CircleCI UI to add your token
      under the 'DISCORD_WEBHOOK_URL' env var
    type: string
steps:
  - run:
      name: Provide error if non-bash shell
      command: |
        if [ ! -x /bin/bash ]; then
          echo Bash not installed.
          exit 1
        fi
  - run:
      name: Discord - Sending Approval Notification
      command: |
        # Provide error if no webhook is set and error. Otherwise continue
        if [ -z "<< parameters.webhook >>" ]; then
          echo "NO DISCORD WEBHOOK SET"
          echo "Please input your DISCORD_WEBHOOK_URL value either in the settings for this project, or as a parameter for this orb."
          exit 1
        else
          #Create Members string
          if [ -n "<< parameters.mentions >>" ]; then
            IFS="," read -ra DISCORD_MEMBERS \<<< "<< parameters.mentions >>"
            for i in "${DISCORD_MEMBERS[@]}"; do
              if [ $(echo ${i} | head -c 1) == "S" ]; then
                DISCORD_MENTIONS="${DISCORD_MENTIONS}<!subteam^${i}> "
              elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                DISCORD_MENTIONS="${DISCORD_MENTIONS}<!${i}> "
              else
                DISCORD_MENTIONS="${DISCORD_MENTIONS}<@${i}> "
              fi
            done
          fi

          curl -H "Content-Type: application/json" -X POST -d \
              "{ \
                \"embeds\": [ \
                  { \
                    \"description\": \"<< parameters.message >>\", \
                    \"color\": 3843043, \
                    \"fields\": [ \
                      { \
                        \"name\": \"Project\", \
                        \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                        \"inline\": true \
                      }, \
                      { \
                        \"name\": \"Job Number\", \
                        \"value\": \"$CIRCLE_BUILD_NUM\", \
                        \"inline\": true \
                      }, \
                      { \
                        \"name\": \"URL\", \
                        \"value\": \"[Visit Workflow](https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID})\" \
                      } \
                    ] \
                  } \
                ] \
            }" << parameters.webhook >>
          echo "Awaiting approval notified."
        fi
      shell: /bin/bash

